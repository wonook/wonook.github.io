@article{song-nemo, 
author = {Song, Won Wook and Yang, Youngseok and Eo, Jeongyoon and Seo, Jangho and Kim, Joo Yeon and Lee, Sanha and Lee, Gyewon and Um, Taegeon and Cho, Haeyoon and Chun, Byung-Gon}, 
title = {Apache Nemo: A Framework for Optimizing Distributed Data Processing}, 
year = {2021}, 
issue_date = {November 2020}, 
publisher = {Association for Computing Machinery}, 
address = {New York, NY, USA}, 
volume = {38}, 
number = {3â€“4}, 
issn = {0734-2071}, 
url = {https://doi.org/10.1145/3468144}, 
doi = {10.1145/3468144}, 
abstract = {Optimizing scheduling and communication of distributed data processing for resource and data characteristics is crucial for achieving high performance. Existing approaches to such optimizations largely fall into two categories. First, distributed runtimes provide low-level policy interfaces to apply the optimizations, but do not ensure the maintenance of correct application semantics and thus often require significant effort to use. Second, policy interfaces that extend a high-level application programming model ensure correctness, but do not provide sufficient fine control.We describe Apache Nemo, an optimization framework for distributed dataflow processing that provides fine control for high performance and also ensures correctness for ease of use. We combine several techniques to achieve this, including an intermediate representation of dataflow, compiler optimization passes, and runtime extensions. Our evaluation results show that Nemo enables composable and reusable optimizations that bring performance improvements on par with existing specialized runtimes tailored for a specific deployment scenario. Apache Nemo is open-sourced at as an Apache incubator project.}, 
journal = {ACM Trans. Comput. Syst.}, 
month = {oct}, 
articleno = {5}, 
numpages = {31}, 
keywords = {distributed systems, Data processing} 
}
